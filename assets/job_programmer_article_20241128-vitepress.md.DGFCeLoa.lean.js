import{_ as a,c as i,a2 as n,o as p}from"./chunks/framework.C3Q6VB1z.js";const c=JSON.parse('{"title":"vitepress的使用和部署","titleTemplate":"cxyi7的个人网站站点","description":"","frontmatter":{"outline":"deep","title":"vitepress的使用和部署","titleTemplate":"cxyi7的个人网站站点"},"headers":[],"relativePath":"job/programmer/article/20241128-vitepress.md","filePath":"job/programmer/article/20241128-vitepress.md"}'),e={name:"job/programmer/article/20241128-vitepress.md"};function t(l,s,h,k,r,d){return p(),i("div",null,s[0]||(s[0]=[n(`<h1 id="vitepress的使用和部署" tabindex="-1">vitepress的使用和部署 <a class="header-anchor" href="#vitepress的使用和部署" aria-label="Permalink to &quot;vitepress的使用和部署&quot;">​</a></h1><p>这里简单介绍下如何使用vitepress创建项目，并且部署到githubPage上。创建项目应该是比较简单的，但是部署到githubPage上貌似直接按照文档来不太行，至少对于我来说行不通。所以，如果已经创建好了项目，但是没法按照文档来部署的，可以直接跳过创建项目这节，直接看部署章节，我会直接贴出代码，拷贝后简单改改即可使用。</p><h2 id="创建vitepress项目" tabindex="-1">创建vitepress项目 <a class="header-anchor" href="#创建vitepress项目" aria-label="Permalink to &quot;创建vitepress项目&quot;">​</a></h2><p>我这里是使用<code>npm</code>安装的</p><h3 id="前置要求" tabindex="-1">前置要求 <a class="header-anchor" href="#前置要求" aria-label="Permalink to &quot;前置要求&quot;">​</a></h3><ul><li>Node.js 18 及以上版本。（对应vitepress 1.5版本）</li><li>使用vscode编辑器。（<strong>不要使用gitbash进行安装，会报错</strong>）</li></ul><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><ul><li>新建一个文件夹</li><li>依次执行以下命令</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>执行完最后一个命令后会出现问题，如无特殊需要，直接使用默认即可。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌  Welcome to VitePress!</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Where should VitePress initialize the config?</span></span>
<span class="line"><span>│  ./docs</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site title:</span></span>
<span class="line"><span>│  My Awesome Project</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site description:</span></span>
<span class="line"><span>│  A VitePress Site</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◆  Theme:</span></span>
<span class="line"><span>│  ● Default Theme (Out of the box, good-looking docs)</span></span>
<span class="line"><span>│  ○ Default Theme + Customization</span></span>
<span class="line"><span>│  ○ Custom Theme</span></span>
<span class="line"><span>└</span></span></code></pre></div><p>到这里项目就创建好了，非常简单。</p><h3 id="关于配置" tabindex="-1">关于配置 <a class="header-anchor" href="#关于配置" aria-label="Permalink to &quot;关于配置&quot;">​</a></h3><p>如果你想设置的和vitepess官网一样，那么就直接去github上，将他们的配置直接抄下来改改就行，这是最简单好用的方法了，这是<a href="https://github.com/vuejs/vitepress/blob/main/docs/.vitepress/config/zh.ts" target="_blank" rel="noreferrer">中文地址</a>。我当时就没想到这个办法，还傻啦吧唧的去谷歌问为啥配置了不生效！！！</p><p>项目创建好了，配置也有了。接下来就是怎么将写好的项目部署到githubPage上了，毕竟这是免费的，不用白不用。</p><h2 id="部署vitepress" tabindex="-1">部署vitepress <a class="header-anchor" href="#部署vitepress" aria-label="Permalink to &quot;部署vitepress&quot;">​</a></h2><p>这是官网的<a href="https://vitepress.dev/zh/guide/deploy" target="_blank" rel="noreferrer">部署方法</a>，写的非常明白了。但是，但是我就是用不了，奇了怪了。我看别人文章里都能直接拿来就用，到我这里就挂了。</p><p>没得办法，只能另辟蹊径了。好歹我学了一点点简单的脚本，直接自己动手写。</p><p>在根目录下创建一个<code>deploy.sh</code>文件，目录结构如下所示</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├─ docs</span></span>
<span class="line"><span>│  ├─ .vitepress</span></span>
<span class="line"><span>│  │  └─ config.js</span></span>
<span class="line"><span>│  ├─ api-examples.md</span></span>
<span class="line"><span>│  ├─ markdown-examples.md</span></span>
<span class="line"><span>│  └─ index.md</span></span>
<span class="line"><span>├─ package.json</span></span>
<span class="line"><span>├─ deploy.sh</span></span></code></pre></div><p>在<code>deploy.sh</code>文件<strong>直接复制以下内容，改两个地方，一个是你的github名字，另一个是远程仓库的名字</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 确保脚本抛出遇到的错误</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成静态文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入生成的文件夹</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/.vitepress/dist</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;deploy&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在github上创建xxx的项目， 这里的xxx就是指github上创建的项目名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:你的github名字/xxx.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master:gh-pages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div><p>复制好之后，在<code>package.json</code>中新增一条命令</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Error: no test specified</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &amp;&amp; exit 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;docs:dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;docs:build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;docs:preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress preview docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;deploy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sh deploy.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>当关联好远程仓库后，需要<strong>先将项目上传到github上</strong>，然后<strong>才能执行下面这个命令进行部署</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">注意</p><p>运行这个命令前，需要将本地项目关闭，不然会一直提示 <strong>EPERM: operation not permitted, scandir &#39;xx\\docs.vitepress.temp\\assets&#39;</strong></p></div><p>也就是说，我这个方法，需要多执行一次命令。也还能接受吧，反正能部署起来了~</p><p>最后，还得去github上进行设置一下，即<em>Settings&gt;&gt;Pages&gt;&gt;Build and deployment</em> 下 将branch选择为 <code>gh-pages</code>就好了</p><h2 id="完美" tabindex="-1">完美 <a class="header-anchor" href="#完美" aria-label="Permalink to &quot;完美&quot;">​</a></h2><p>遇到问题，还得靠自己~~</p><p>感谢那个啥都会一点的自己</p>`,32)]))}const g=a(e,[["render",t]]);export{c as __pageData,g as default};
